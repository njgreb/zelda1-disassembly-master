MEMORY
{
    ROM_00: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    ROM_01: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    RAM_01_CODE: start = $6C90, size = $1270, file = "", fill = yes, fillval = $FF ;
    ROM_02: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    ROM_03: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    ROM_04: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    ROM_05: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    ROM_06: start = $8000, size = $4000, file = %O, fill = yes, fillval = $FF ;
    RAM_06_DATA: start = $67F0, size = $008E, file = "", fill = yes, fillval = $FF ;
    ROM_07: start = $C000, size = $4000, file = %O, fill = yes, fillval = $FF ;
}

SEGMENTS
{
    BANK_00_00: load = ROM_00, type = ro, start = $8D60 ;
    BANK_00_ISR: load = ROM_00, type = ro, start = $BF50 ;
    BANK_00_VEC: load = ROM_00, type = ro, start = $BFFA ;
    BANK_01_00: load = ROM_01, type = ro ;
    BANK_01_CODE: load = ROM_01, type = ro, run = RAM_01_CODE, define = yes ;
    BANK_01_ISR: load = ROM_01, type = ro, start = $BF50 ;
    BANK_01_VEC: load = ROM_01, type = ro, start = $BFFA ;
    BANK_02_00: load = ROM_02, type = ro ;
    BANK_02_ISR: load = ROM_02, type = ro, start = $BF50 ;
    BANK_02_VEC: load = ROM_02, type = ro, start = $BFFA ;
    BANK_03_00: load = ROM_03, type = ro ;
    BANK_03_ISR: load = ROM_03, type = ro, start = $BF50 ;
    BANK_03_VEC: load = ROM_03, type = ro, start = $BFFA ;
    BANK_04_00: load = ROM_04, type = ro ;
    BANK_04_ISR: load = ROM_04, type = ro, start = $BF50 ;
    BANK_04_VEC: load = ROM_04, type = ro, start = $BFFA ;
    BANK_05_00: load = ROM_05, type = ro ;
    BANK_05_ISR: load = ROM_05, type = ro, start = $BF50 ;
    BANK_05_VEC: load = ROM_05, type = ro, start = $BFFA ;
    BANK_06_00: load = ROM_06, type = ro ;
    BANK_06_DATA: load = ROM_06, type = ro, run = RAM_06_DATA, define = yes ;
    BANK_06_DLIST: load = ROM_06, type = ro, start = $A000 ;
    BANK_06_ISR: load = ROM_06, type = ro, start = $BF50 ;
    BANK_06_VEC: load = ROM_06, type = ro, start = $BFFA ;
    BANK_07_00: load = ROM_07, type = ro ;
    BANK_07_ISR: load = ROM_07, type = ro, start = $FF50 ;
    BANK_07_VEC: load = ROM_07, type = ro, start = $FFEB ;
}

SYMBOLS
{
    __BANK_01_CODE_RUN_END__: type = export, value = __BANK_01_CODE_RUN__+__BANK_01_CODE_SIZE__;
}
